arquivos.write('<usuario>\n')
	arquivos.write('   <codigo-telecentro>000186990</codigo-telecentro>\n')
	id_user = results[0]
	nick = str(results[1])
	nomeCompleto = str(results[2])
	email = str(results[3])
	cpf = str(results[5])
	item1 = '   <nick>'+ nick + '</nick>\n'
	item2 = '   <nome-completo>'+ nomeCompleto + '</nome-completo>\n'
	item3 = '   <email>'+ email + '</email>\n'
	item4 = '   <cpf>'+ cpf + '</cpf>\n'
	estadoCivil = ""
	
	if results[7] != None:
	  dbCursor.execute("SELECT description FROM public.marital_status where id=%s order by id" % results[7])
          resultSet = dbCursor.fetchall()	
	  for resultsD in resultSet:
	      item15 = '   <estado-civil>'+ resultsD[0] + '</estado-civil>\n'
	else:
	  item15 = '   <estado-civil>Não informado</estado-civil>\n'

	telefone = str(results[8]) 
	item5 = '   <telefone>'+ telefone + '</telefone>\n' 

	escolaridade = ""
	escl = str(results[10])
	if escl != 'None':
	   if escl == 1:
	      escolaridade = 'Educacao Infantil'
	   elif escl == 2: 
	      escolaridade = 'Ensino Fundamental'
	   elif escl == 3:
	      escolaridade = 'Ensino Medio'
	   elif escl == 4:
	      escolaridade = 'Ensino Profissionalizante'
	   elif escl == 5:
	      escolaridade = 'Graduacao'
	   elif escl == 6:
	      escolaridade = 'Pos-Graduacao'
	   elif escl == 7:
	      escolaridade = 'Mestrado'
	   elif escl == 8:
	      escolaridade = 'Doutorado'
	   else:
	      escolaridade = 'Analfabeto'
	else:
	   escolaridade = 'Não informado'	

	item6 = '   <escolaridade>'+ escolaridade + '</escolaridade>\n'
 
	item7 = '   <ultimo-login>'+ str(results[12]) + '</ultimo-login>\n' 
	item8 = '   <data-registro>'+ str(results[15]) + '</data-registro>\n' 

	sexo = ""
	sex = str(results[17])
	if sex != 'None':
	   if sex == 1:
	      sexo = 'Feminino'
	   else:
	      sexo = 'Masculino'
	else:
	   sexo = 'Não informado' 
	item9 = '   <sexo>'+ sexo + '</sexo>\n' 
	ocupacao = ""
	ocup = str(results[18])
	if ocup != 'None':
	   if ocup == 1:
	      ocupacao = 'Trabalhando'
	   elif ocup == 2: 
	      ocupacao = 'Desempregado'
	   elif ocup == 3:
	      ocupacao = 'Estudante'
	   elif ocup == 4:
	      ocupacao = 'Aposentado'
	   else:
	      ocupacao = 'Inativo'
	else:
	   ocupacao = 'Não informado'
	item10 = '   <ocupacao>'+ ocupacao + '</ocupacao>\n' 
	situacaoOcupacional = ""
	situOcup = str(results[19])
	if situOcup != 'None':
	   if situOcup == 1:
	      situacaoOcupacional = 'Contratado com carteira'
	   elif situOcup == 2: 
	      situacaoOcupacional = 'Contratado sem carteira'
	   elif situOcup == 3:
	      situacaoOcupacional = 'Autonomo'
	   elif situOcup == 4:
	      situacaoOcupacional = 'Temporario (bico)'
	   elif situOcup == 5:
	      situacaoOcupacional = 'Dona(o) de casa'
	   else:
	      situacaoOcupacional = 'Negocio proprio'
	else:
	   situacaoOcupacional = 'Não informado'
	item11 = '   <situacao-ocupacional>'+ situacaoOcupacional + '</situacao-ocupacional>\n' 
	tipoDeficiencia = ""
	tipoDef = str(results[20])
	if tipoDef != 'None':
	   if tipoDef == 1:
	      tipoDeficiencia = 'Fisica'
	   elif tipoDef == 2: 
	      tipoDeficiencia = 'Auditiva'
	   elif tipoDef == 3:
	      tipoDeficiencia = 'Visual'
	   elif tipoDef == 4:
	      tipoDeficiencia = 'Mental'
	   elif tipoDef == 5:
	      tipoDeficiencia = 'Autismo'
	   else:
	      tipoDeficiencia = 'Sindrome de Down'
	else:
	   tipoDeficiencia = 'Não informado'
	item12 = '   <tipo-deficiencia>'+ tipoDeficiencia + '</tipo-deficiencia>\n' 
	rendaFamiliar = ""
	rendaFam = str(results[21])
	if rendaFam != 'None':
	   if rendaFam == 2:
	      rendaFamiliar = 'menos de 1 salario minimo'
	   elif rendaFam == 3: 
	      rendaFamiliar = 'de 1 a 2 salarios minimos'
	   elif rendaFam == 4:
	      rendaFamiliar = 'de 3 a 5 salarios minimos'
	   elif rendaFam == 5:
	      rendaFamiliar = 'de 6 a 10 salarios minimos'
	   elif rendaFam == 6:
	      rendaFamiliar = 'de 11 a 20 salarios minimos'
	   else:
	      rendaFamiliar = 'mais de 20 salarios minimos'
	else:
	   rendaFamiliar = 'Não informado'
	item13 = '   <renda-familiar>'+ rendaFamiliar + '</renda-familiar>\n' 
	etnia = ""
	etn = str(results[22])
	if etn != 'None':
	   if etn == 1:
	      etnia = 'Afrodescendente (Negra)'
	   elif etn == 2: 
	      etnia = 'Indigena'
	   elif etn == 3:
	      etnia = 'Parda'
	   elif etn == 4:
	      etnia = 'Amarela'
	   else:
	      etnia = 'Branca'
	else:
	   etnia = 'Não informado'
	item14 = '   <etnia>'+ etnia + '</etnia>\n' 
	
	item16 = "   <uf>Não informado</uf>\n"
	item17 = "   <cidade>Não informado</cidade>\n"
	item18 = "   <bairro>Não informado</bairro>\n"
	item19 = "   <end>Não informado</end>\n"
	item20 = "   <cep>Não informado</cep>\n"

	dbCursor.execute("SELECT * FROM public.address WHERE public.address.user=%d" % id_user)
	resultSet = dbCursor.fetchall()
	for results in resultSet:
	   if str(results[4]) != "None":
	      dbCursor.execute("SELECT sigla FROM public.state where id=%s" % str(results[5]))
	      
	      resultSet = dbCursor.fetchall()	
	      for resultsB in resultSet:
	         item16 = '   <uf>'+ str(resultsB[0]) + '</uf>\n'
	  
		
	
	   if str(results[4]) != "None":	   
	      dbCursor.execute("SELECT name FROM public.city where id_state=%s" % str(results[4]))
	      
	      resultSet = dbCursor.fetchall()	
	      for resultsA in resultSet:
	          item17 = '   <cidade>'+ str(resultsA[0]) + '</cidade>\n'
	  
		   
	   item18 = '   <bairro>'+ str(results[2]) + '</bairro>\n'
	   item19 = '   <end>'+ str(results[1]) + '</end>\n' 
	   item20 = '   <cep>'+ str(results[3]) + '</cep>\n' 

	arquivos.write(item1)
	arquivos.write(item2)
	arquivos.write(item3)
	arquivos.write(item4)
	arquivos.write(item5)
	arquivos.write(item6)
	arquivos.write(item7)
	arquivos.write(item8)
	arquivos.write(item9)
	arquivos.write(item10)
	arquivos.write(item11)
	arquivos.write(item12)
	arquivos.write(item13)
	arquivos.write(item14)
	arquivos.write(item15)
	arquivos.write(item16)
	arquivos.write(item17)
	arquivos.write(item18)
	arquivos.write(item19)
	arquivos.write(item20)
