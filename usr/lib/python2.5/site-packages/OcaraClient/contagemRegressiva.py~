#!/usr/bin/env python
#-*- coding: utf-8 -*-
 
import wx
import time
import os
from OcaraCore.utils import rename_process

class Main(wx.Frame):

   def __init__(self, parent, id, pos, size, style):

      rename_process('contagem-regressiva')
      	
      wx.Frame.__init__(self, parent, id, "Seu tempo está acabando!", pos=(0,20), size=(400, 120), style=(wx.CAPTION | wx.STAY_ON_TOP | wx.MINIMIZE_BOX))

      self.id = id
      self.parent = parent
      self.pos = pos
      self.size = size
      
      # Cria um texto estático
      self.text = wx.StaticText(self, label='Seu tempo está acabando! Restam:', pos=(10, 10))
      self.text.SetFont(wx.Font(14, wx.DECORATIVE, wx.NORMAL, wx.BOLD))

      clock = time.asctime(time.localtime(120)).split()[3]
      clock = "00:0%s:0%s" % (clock[4], clock[6])
      # Cria um rótulo de texto
      self.control = wx.StaticText(self, label=clock, pos=(110, 40))
      # Muda a fonte
      self.control.SetFont(wx.Font(29, wx.DECORATIVE, wx.NORMAL, wx.BOLD))

      self.text = wx.StaticText(self, label='Salve seus documentos e feche todos os aplicativos.', pos=(10, 90))
      self.text.SetFont(wx.Font(9, wx.DECORATIVE, wx.NORMAL, wx.BOLD))

      self.SetBackgroundColour(wx.Color(0,255,0))
      # Cria um timer
      TIMER_ID = -1
      self.timer = wx.Timer(self, TIMER_ID)
      # Inicia o timer
      self.timer.Start(1000)
      self.tempo = 120
      # Associa os métodos com os eventos
      wx.EVT_TIMER(self, TIMER_ID, self.on_timer)
      #wx.EVT_CLOSE(self, self.on_close)
      self.Show(True)

   def on_timer(self, event):
      # Atualiza o relógio
      if self.tempo == 1:
	 self.timer.Stop()
         self.Destroy()

      if self.tempo == 110:
         self.Create(self.parent, self.id, "Seu tempo está acabando!", self.pos, self.size, style=(wx.FRAME_NO_TASKBAR | wx.STAY_ON_TOP))

      self.tempo -= 1
      clock = time.asctime(time.localtime(self.tempo)).split()[3]
      clock = "00:0%s:%s%s" % (clock[4], clock[6], clock[7])
      self.control.SetLabel(clock)
      
   def on_close(self, event):
      # Para o timer
      self.timer.Stop()
      self.Destroy()


app = wx.App()
Main(None, wx.ID_ANY, None, None, None)
app.MainLoop()
